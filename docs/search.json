[{"path":"https://chernolabs.github.io/scX/articles/Exploratory_Data_Analysis.html","id":"categories","dir":"Articles","previous_headings":"","what":"Categories","title":"Exploratory Data Analysis","text":"can observe proportion cells belonging different levels categorical variable presented metadata disaggregate proportions according levels another categorical variable. information displayed form barplot. “Matrix” tab, confusion matrix two selected features can plotted option display Jaccard index grid cells. addition, Rand index displayed, global measure similarity two clusterings.","code":""},{"path":"https://chernolabs.github.io/scX/articles/Exploratory_Data_Analysis.html","id":"fields","dir":"Articles","previous_headings":"","what":"Fields","title":"Exploratory Data Analysis","text":"similar way previous subsection, “Fields” can explore value one numerical variables changes function another variable, either numerical categorical. can make different types plots : Distribution Plots, Heatmaps, Dotplots StackedViolins.","code":""},{"path":"https://chernolabs.github.io/scX/articles/FAQ.html","id":"what-type-of-input-does-scx-accept","dir":"Articles","previous_headings":"","what":"1. What type of input does scX accept?","title":"FAQ","text":"scX “plug play” tool pre-processes data using raw count matrix, allowing dataset explored depth. Nonetheless, advisable input SCE object using createSCEobject() function. function, however, also accepts raw count matrix (genes rows cells columns) Seurat object. latter two cases, automatically transforms inputs SCE object. supply cell metadata, must contained dataframe cell names rownames. Typical examples metadata cell type, sampleid, percentage mitochondrial reads. scX extremely valuable tool visualising analysing single-cell single-nuclei RNA sequencing data. maximise potential, important pre-processed object, .e. one already undergone QC filtering genes cells, well appropriate normalisation type data. already computed partitions, Louvain-Leiden partition identify cell types states, can pass input visualised PCA, UMAP, TSNE obtain markers, DEGs different clusters, . case use partitionVars parameter. visualize additional information plots, must passed metadataVars parameter.","code":"# Input = SingleCellExperiment object (sce) cseo <- createSCEobject(xx = sce)  # Input = Seurat object (seu) cseo <- createSCEobject(xx = seu)  # Alternatively, Input = combine a matrix (mat) from one of these classes: # c(\"dgCMatrix\", \"Matrix\", \"matrix\") and metadata as data.frame (df) cseo <- createSCEobject(xx = mat, metadata = df) cseo <- createSCEobject(xx = sce,                          partitionVars = c(\"inferred_cell_type\"),                          metadataVars = c(\"pseudotime\", \"sex\"))"},{"path":"https://chernolabs.github.io/scX/articles/FAQ.html","id":"how-to-pass-a-normalized-count-matrix-as-input-of-createsceobject","dir":"Articles","previous_headings":"1. What type of input does scX accept?","what":"1.1 How to pass a normalized count matrix as input of createSCEobject()?","title":"FAQ","text":"possess normalized count matrix rather raw count matrix, may transform SCE object providing createSCEobject()","code":"sce <- SingleCellExperiment(list(logcounts=norm.mat)) cseo <- createSCEobject(xx = sce)"},{"path":"https://chernolabs.github.io/scX/articles/FAQ.html","id":"how-to-use-scanpy--h5ad-or--loom-objets","dir":"Articles","previous_headings":"1. What type of input does scX accept?","what":"1.2 How to use Scanpy (.h5ad) or .loom objets?","title":"FAQ","text":"’s necessary convert SingleCellExperiment Seurat objects. tutorial explain convert SingleCellExperiment using zellkonverter package. .loom, using sceasy package","code":"sce <- readH5AD(file,         reader =  \"R\" #Then run the createSCEobject as in 1) ) sceasy::convertFormat('filename.loom', from=\"loom\", to=\"sce\",                        outFile='filename.rds') sce <- readRDS('filename.rds')"},{"path":"https://chernolabs.github.io/scX/articles/FAQ.html","id":"is-there-a-maximum-size-limit-for-input-objects-that-scx-is-capable-of-processing","dir":"Articles","previous_headings":"","what":"2. Is there a maximum size limit for input objects that scX is capable of processing?","title":"FAQ","text":"constraints scX determined hardware computer, including RAM CPU. typical PC (16GB, i5-8400) can efficiently handle datasets medium size, containing 30k cells. aware number partitions clusters also affect processing time dataset. ensure smooth application visualisation plots datasets 50k cells, createSCEobject() function subsamples SCE object 50k random cells, storing cell names CELLS2KEEP output. cluster cells wish retain, can pass names cells2keep parameter. need utilize 50k cells possess 200k cell SCE object, implementing stratified subsampling preserve half cells cluster viable option. result app exhibiting 100k cells visualization. willing attempt utilize cells within application potential drawback running low memory experiencing extended waiting periods plots, can modify parameter prior launching launch_scX(). Important note: calculations preprocessing stage apply every cell within dataset, regardless subsampling provided cells2keep parameter visualization purposes.","code":"c2k <- colnames(sce)[sce$inferred_cell_type==\"COP\"] cseo <- createSCEobject(xx = sce,                          partitionVars = c(\"inferred_cell_type\"),                          cells2keep = c2k) # Keeping COP cells in case of subsampling data for visualization library(dplyr) # sce: SCE object of a dataset with 200k cells sce$cellnames <- colnames(sce) c2k <- colData(sce) %>% as.data.frame %>%          group_by(inferred_cell_type) %>%          sample_frac(0.5,replace =  F) # sample half of the cells in every cluster cseo <- createSCEobject(xx = sce,                          partitionVars = c(\"inferred_cell_type\"),                          metadataVars = c(\"pseudotime\", \"sex\"))  # Change the output of the subsampling function to be able to use 100k cells: cseo$CELLS2KEEP <- c2k$cellnames launch_scX(cseo) cseo <- createSCEobject(xx = sce,                          partitionVars = c(\"inferred_cell_type\"),                          metadataVars = c(\"pseudotime\", \"sex\"))  # Change the output of the subsampling function: cseo$CELLS2KEEP <- 'all' launch_scX(cseo)"},{"path":"https://chernolabs.github.io/scX/articles/FAQ.html","id":"how-to-deploy-a-shiny-app-in-shinyapps-io","dir":"Articles","previous_headings":"","what":"3. How to deploy a shiny app in shinyapps.io?","title":"FAQ","text":"One way deploy app online use shinyapps service. first step create account https://www.shinyapps.io/. user guide can found . Save SCE object /data folder Create app.R script: run: Another option R Shiny Server, details please visit following link. Finally, Amazon Web Services (AWS) can also used. step--step tutorial shiny app can deployed AWS can found .","code":"library(scX) # Loading SCE object load('data/data.Rdata') launch_scX(cseo,point.size = 50) library(rsconnect)  rsconnect::setAccountInfo(name=\"<ACCOUNT>\",                            token=\"<TOKEN>\",                           secret=\"<SECRET>\")  rsconnect::deployApp('path/to/your/app.R')"},{"path":"https://chernolabs.github.io/scX/articles/FAQ.html","id":"if-i-want-to-change-any-preprocessing-parameters-do-i-need-to-go-through-all-the-steps-again-to-relaunch-the-app","dir":"Articles","previous_headings":"","what":"4. If I want to change any preprocessing parameters, do I need to go through all the steps again to relaunch the app?","title":"FAQ","text":"! createSCEobject() can take input output, avoiding steps like logcounts calculation, dimensionality reductions, etc., . instance, initiated application using test.type = “wilcox” paramFindMarkers now intend re-launch utilizing different sort test, like t-test, just use createSCEobject() function updated parameter, indicating require features recalculated.","code":"createSCEobject(   xx = sce,   assay.name.raw = \"counts\",   assay.name.normalization = \"logcounts\"   calcRedDim = FALSE,   paramFindMarkers = list(test.type = \"t\", pval.type = \"all\", direction = \"up\"),   calcAllPartitions = FALSE )"},{"path":"https://chernolabs.github.io/scX/articles/Gene_Expression.html","id":"categories","dir":"Articles","previous_headings":"","what":"Categories","title":"Gene Expression","text":"Settings can select one genes, upload file list genes. average expression genes interest can viewed different embeddings available, possibility colour according different SCE partitions compare gene expression different cell types conditions present metadata.","code":""},{"path":"https://chernolabs.github.io/scX/articles/Gene_Expression.html","id":"fields","dir":"Articles","previous_headings":"","what":"Fields","title":"Gene Expression","text":"section allows analyse expression set genes relation numeric variables present dataset, number counts pseudotime value, present metadata sce object. embedding, line plot average expression genes interest function chosen variables spikeplot displayed. Furthermore, can find heatmaps sorted chosen numerical variable can divided according categorical variable, multiline plots showing comparison expression profile genes interest along field.","code":""},{"path":"https://chernolabs.github.io/scX/articles/Gene_Expression.html","id":"co-expression","dir":"Articles","previous_headings":"","what":"Co-expression","title":"Gene Expression","text":"Co-expression section can analyse co-appearance pairs genes, determine number percentage cells gene expressed separately together. can also view information graphically embedding. addition, co-expression genes different conditions partitions dataset can analysed co-detection matrix.","code":""},{"path":[]},{"path":"https://chernolabs.github.io/scX/articles/get_started.html","id":"loading-datasets","dir":"Articles","previous_headings":"Quick Start Guide","what":"Loading Datasets","title":"Quick Start","text":"show different capabilities scX, use single cell data related oligodendrocyte developmental lineage (Marques et al. 2016). dataset cells 12 regions central nervous system juvenile adult mice 10 distinct cell populations identified. package includes modified version dataset original cells subsampled pseudotime calculated demonstrate scX can represent numerical attributes. example use ‘inferred_cell_type’ covariate explore differential expression patterns (partitionVars parameter). rest metadata used visualization purposes (metadataVars parameter). partitionVars categorical variables, metadataVars can discrete continuous covariates.  scX app can created launched two functions. createSCEobject() creates single cell experiment object used within application. function performs set preprocessing steps required various scX functions. Among steps can mention: Calculation quality control metrics. partition declared partitionVars parameter, preliminary clustering calculated scran package function scran::quickCluster(). Normalization gene expression matrix. Determination variable genes (HVG). Calculation different dimensionality reductions: PCA, tSNE, UMAP. input dataset already characteristics, steps can avoided. example, dataset already precomputed PCA, scX recalculate calculate dimensionality reductions already calculated dataset. hand, different options calculation marker genes different clusters can determined. can done within parameter paramFindMarkers expects list parameters taken function scran::findMarkers(). Finally launch_scX() function application deployed.","code":"library(scX)  #SCE example data sce  colData(sce)[1:3,] # DataFrame with 3 rows and 8 columns #                                   title     source_name         age inferred_cell_type                    sex      strain   treatment pseudotime #                             <character>     <character> <character>        <character>            <character> <character> <character>  <numeric> #   C1-1771017-030-C09 C1-1771017-030-C09       cortex S1         p22                OPC pooled male and female  PDGFRa-GFP          No    23.1662 #   C1-1771017-028-G05 C1-1771017-028-G05 hippocampus CA1         p22                OPC                      F  PDGFRa-GFP          No    21.7566 #   C1-1771052-132-B02 C1-1771052-132-B02 corpus callosum         p69                OPC                      M         CD1          No    23.3207 library(scX) # Creating SCE object cseo <- createSCEobject(xx = sce,                          partitionVars = \"inferred_cell_type\",                          metadataVars = c(\"source_name\", \"age\", \"sex\", \"strain\", \"treatment\", \"pseudotime\"),                         descriptionText = \"Quick Start Guide\")  launch_scX(cseo)"},{"path":"https://chernolabs.github.io/scX/articles/install.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Install","text":"scX requires certain packages installed. user packages installed, can execute following code: scX can installed Github follows:","code":"BiocManager::install(c(\"SingleCellExperiment\",\"scran\",\"scatter\",\"ComplexHeatmap\")) devtools::install_github(\"chernolabs/scX\")"},{"path":"https://chernolabs.github.io/scX/articles/Markers.html","id":"cluster-markers","dir":"Articles","previous_headings":"","what":"Cluster markers","title":"Markers","text":"section allows find marker genes partition defined single-cell object, typically cell types cell states. Clicking one cells embedding display table marker genes partition cell belongs. markers different metrics boxcor, robustness FDR displayed. table can downloaded various formats, .csv, .xlsx .pdf, can copy clipboard.","code":""},{"path":"https://chernolabs.github.io/scX/articles/Markers.html","id":"find-new-markers","dir":"Articles","previous_headings":"","what":"Find new markers","title":"Markers","text":"can select box lasso tool set cells embedding scX calculate marker genes. can download marker table also selected cell list.","code":""},{"path":"https://chernolabs.github.io/scX/articles/Visual_Tools.html","id":"violin-by-partition","dir":"Articles","previous_headings":"","what":"Violin by Partition","title":"Visual Tools","text":"selecting uploading set genes interest, set Violin plots can obtained download .pdf format, allowing facet plots differents categorical co-variables.","code":""},{"path":"https://chernolabs.github.io/scX/articles/Visual_Tools.html","id":"multiplots","dir":"Articles","previous_headings":"","what":"Multiplots","title":"Visual Tools","text":"Multiplots subsection allows explore different variables change across cells embedding choice, expression given set genes, partitions categorical variable, value continuous variable.","code":""},{"path":"https://chernolabs.github.io/scX/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tomás Vega Waichman. Author, maintainer. María Luz Vercesi. Author.            https://github.com/mluzvercesi Ariel . Berardino. Author. Maximiliano S. Beckel. Author. Chernomoretz Lab Collaborators. Funder.","code":""},{"path":"https://chernolabs.github.io/scX/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Waichman TV, Vercesi ML, Berardino AA, Beckel MS, Giacomini D, Rasetto NB, Herrero M, Bella DJD, Arlotta P, Schinder AF, Chernomoretz (2023). “scX: user-friendly tool scRNA-seq exploration.” 2311.00012, https://arxiv.org/abs/2311.00012.","code":"@Misc{,   title = {scX: A user-friendly tool for scRNA-seq exploration},   author = {Tomás Vega Waichman and M. Luz Vercesi and Ariel A. Berardino and Maximiliano S. Beckel and Damiana Giacomini and Natalí B. Rasetto and Magalí Herrero and Daniela J. Di Bella and Paola Arlotta and Alejandro F. Schinder and Ariel Chernomoretz},   year = {2023},   eprint = {2311.00012},   archiveprefix = {arXiv},   primaryclass = {q-bio.GN},   url = {https://arxiv.org/abs/2311.00012}, }"},{"path":"https://chernolabs.github.io/scX/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 scX authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an object ready for use in the scX app — createSCEobject","title":"Creates an object ready for use in the scX app — createSCEobject","text":"createSCEobject creates input object (List) function launch_scX. list includes SingleCellExperiment object normalized expression, reduced dimensions visualization, additional data provided. Also, object includes identified gene markers differential expression analysis user-specified partition (partition selected, quick clusterization computed considered)","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an object ready for use in the scX app — createSCEobject","text":"","code":"createSCEobject(   xx,   assay.name.raw = \"counts\",   assay.name.normalization = \"logcounts\",   metadata = NULL,   partitionVars = NULL,   metadataVars = NULL,   chosen.hvg = NULL,   nHVGs = 3000,   nPCs = 50,   calcRedDim = TRUE,   paramFindMarkers = list(test.type = \"wilcox\", pval.type = \"all\", direction = \"up\"),   BPPARAM = BiocParallel::SerialParam(),   minSize = 30,   calcAllPartitions = FALSE,   cells2keep = NULL,   nSubCells = 50000,   descriptionText = NULL,   verbose = TRUE )"},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an object ready for use in the scX app — createSCEobject","text":"xx Either numeric count matrix object (genes rows cells columns), SingleCellExperiment object Seurat object. assay.name.raw Assay name raw counts matrix input object SingleCellExperiment. Defaults counts. assay.name.normalization Assay name normalized matrix present SingleCellExperiment. present, computes logcounts default. metadata (Optional) DataFrame containing cell metadata. row names metadata data frame must include cell names appear columns xx. partitionVars (Optional) Names metadata colData columns used gene markers differential expression analysis. set NULL (default), quick clustering step performed using quickCluster scran package. metadataVars (Optional) Names additional metadata colData columns used coloring plots. set NULL (default), partitionVars columns available coloring plots. chosen.hvg (Optional) list Highly Variable Genes. NOTE: chosen.hvg=NULL xx Seurat object computed VariableFeatures, parameter set list genes. nHVGs Number Highly Variable Genes use chosen.hvg=NULL. Defaults 3000. nPCs Number Principal Components use PCA. Defaults 50. calcRedDim Logical. Indicates whether compute reduced dimensions (PCA, UMAP, t-SNE, UMAP2D, t-SNE2D). Defaults TRUE. (Note: set FALSE, 2D >3D reduced dimensions provided input, PCA embedding estimated anyway). paramFindMarkers named list parameters pass findMarkers compute cluster gene markers. Defaults list(test.type=\"wilcox\", pval.type=\"\", direction=\"\"). BPPARAM BiocParallelParam object indicating whether parallelization performed across genes findMarkers function. minSize Numeric. minimum cluster size calculating gene marker statistics. calcAllPartitions Logical. Defaults FALSE, means partitions partitionVars 30 fewer levels considered marker DEG calculations. set TRUE, forces computation markers DEGs entire list partitionVars. cells2keep (Optional) list cell names keep case subsampling. NOTE: Subsampling activated visualization purposes case large datasets; used computations. 50k cells used visualization app, indexes stored CELLS2KEEP element CSEO object. nSubCells Numeric. maximum number cells select subsampling data set. descriptionText (Optional) short description object analyzed. text displayed Summary module scX app. verbose Logical. Indicates whether show step--step status function running. Defaults TRUE.","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an object ready for use in the scX app — createSCEobject","text":"named List serves input launch_scX, contains following fields: SCE: SingleCellExperiment object computed normalized expression dimensional reduction embeddings (PCA, UMAP, t-SNE, 2D & 3D). calculated using list chosen.hvg NULL, top nHVGs. colData contains partitionVArs metadataVars specified; otherwise, quick clusterization available preliminary analysis data. sce.degs: named List DataFrames DataFrame contains consolidated marker statistics gene (row) cluster name. Statistics computed using findMarkers, user can choose test.type parameters pass function. See combineMarkers details dataframes created. sce.markers: List named Lists DataFrames. one corresponds marker genes every cluster partition (names nested lists). summary.stats: AUC test.type==\"wilcox\" -log.FC test.type==\"t\" test.type==\"binom\". log.FDR: -Log.FDR appropriate inter-cluster comparison according selected p-value type. See findMarkers details metrics computed. boxcor: Correlation scores normalized gene expression profiles binary vector cells, cells selected cluster value 1. (optional) text: String descriptionText NULL. CELLS2KEEP: Numeric, indices selected cells chosen visualization scX application. (Alternatively) Character, '' subsampling performed visualization purposes.","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates an object ready for use in the scX app — createSCEobject","text":"function handles basic preprocessing steps sc/sn-RNAseq data. leverages functionality implemented scran, scater, SingleCellExperiment packages. steps include: converting input SingleCellExperiment object, estimating QC metrics, normalizing expression matrix, identifying highly variable genes, computing embeddings various dimensionality reduction techniques. cell partition provided, default clustering step conducted investigate marker genes differential expression patterns. large datasets (50k cells), subsampling SingleCellExperiment object considered reduce waiting times scX app. detailed discussion employed preprocessing pipeline can found OSCA book.","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"partitions","dir":"Reference","previous_headings":"","what":"Partitions","title":"Creates an object ready for use in the scX app — createSCEobject","text":"recommended include curated partition data input object metadata. Marker genes differential expression analysis automatically computed partitions fewer 31 levels specified partitionVars. user wishes run calculations partitions 30 levels, calcAllPartitions must set TRUE (Please note step time-consuming). may want color partitions plots without compute marker genes DEGs analyses . , pass partitions metadataVars.","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"metadata","dir":"Reference","previous_headings":"","what":"Metadata","title":"Creates an object ready for use in the scX app — createSCEobject","text":"Metadata passed createSCEobject DataFrame rows must include cells present XX input. Metadata columns represent cell covariates. character numeric covariates passed metadataVars fewer 31 unique values set factors referred \"Categories\" scX app. Numeric covariates 30 unique values called \"Fields.\"","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"normalization","dir":"Reference","previous_headings":"","what":"Normalization","title":"Creates an object ready for use in the scX app — createSCEobject","text":"normalized assay SingleCellExperiment object Seurat input object Normalization deconvolution performed proposed OSCA book. First, calculate clusters using Walktrap community detection algorithm graph-based clustering (default parameters quickCluster). resulting clusters stored colData \"scx.clust\". compute scale factors cells using clusters. Finally, calculate lognormalized expression matrix applying log2 transformation product raw matrix scale factors considering pseudocounts 1.","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"clustering","dir":"Reference","previous_headings":"","what":"Clustering","title":"Creates an object ready for use in the scX app — createSCEobject","text":"partitionVars user-specified, categories used clustering data. partitionVars NULL, quick clustering step (see \"Normalization\") used identify markers DEGs. Additionally, normalized assay exists SCE object \"scx.clust\" included partitionVars, previously described function applied compute clustering, stored colData \"scx.clust.\"","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"highly-variable-genes","dir":"Reference","previous_headings":"","what":"Highly Variable Genes","title":"Creates an object ready for use in the scX app — createSCEobject","text":"chosen.hvg specified, use modelGeneVar calculate variance mean lognormalized expression values. fitting trend variance mean, biological component variation gene can assigned residual trend (see scran documentation details). consider top nHVGs variable genes biological component greater 0.","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"reduced-dimensional-analysis-techniques","dir":"Reference","previous_headings":"","what":"Reduced Dimensional Analysis Techniques","title":"Creates an object ready for use in the scX app — createSCEobject","text":"scX tool helps visualize data properly running several dimensionality reduction analysis techniques (PCA, UMAP2D, TSNE2D, UMAP3D, TSNE3D). use app, xx must least 2D dimensional reduction embedding. xx already dimensionality reduction embeddings calculated, can set calcRedDim FALSE. NOTE: set FALSE, dimension reductions calculated SingleCellExperiment object, less 4 dimensions none 2D, PCA calculated. Principal Component Analysis calculated runPCA using chosen.hvg retaining first nPCs components normalized expression matrix. TSNE UMAP calculated runTSNE runUMAP functions using PCA matrix.","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"marker-genes-analysis","dir":"Reference","previous_headings":"","what":"Marker Genes Analysis","title":"Creates an object ready for use in the scX app — createSCEobject","text":"createSCEobject computes statistics identify marker genes every cluster partitions partitionVars using findMarkers functions (parameters specified user paramFindMarkers). genes FDR < 0.05 selected cluster. boxcor score calculated genes follows: boxcor: boxcor correlation gene's expression vector (logcounts) binary vector, cells selected cluster mark 1 rest cells mark 0.","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"differential-expression-analysis","dir":"Reference","previous_headings":"","what":"Differential Expression Analysis","title":"Creates an object ready for use in the scX app — createSCEobject","text":"use findMarkers function identify DEGs clusters specified partitionVars (direction=\"\",pval.type=\"\"). test.type can specified user paramFindMarkers$test.type.","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"subsampling-cells","dir":"Reference","previous_headings":"","what":"Subsampling cells","title":"Creates an object ready for use in the scX app — createSCEobject","text":"SingleCellExperiment object contains 50k cells (number can changed nSubCells), random sample 50k cells chosen visualization purposes application. Cell names user wants keep visualizations can specified cells2keep parameter. Please note solely producing efficient visualizations.","code":""},{"path":[]},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates an object ready for use in the scX app — createSCEobject","text":"Tomás Vega Waichman, Maria Luz Vercesi, Ariel . Berardino, Maximiliano S. Beckel, Chernomoretz Lab Collaborators","code":""},{"path":"https://chernolabs.github.io/scX/reference/createSCEobject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an object ready for use in the scX app — createSCEobject","text":"","code":"if (FALSE) { # Quick start guide example: library(scX) cseo <- createSCEobject(xx = sce,                          partitionVars = \"inferred_cell_type\",                          metadataVars = c(\"source_name\", \"age\", \"sex\", \"strain\", \"treatment\", \"pseudotime\"),                         descriptionText = \"Quick Start Guide\") launch_scX(cseo) }"},{"path":"https://chernolabs.github.io/scX/reference/launch_scX.html","id":null,"dir":"Reference","previous_headings":"","what":"A Shiny app for visualization of single-cell data — launch_scX","title":"A Shiny app for visualization of single-cell data — launch_scX","text":"launch_scX() launches scX Shiny app visualizing single-cell data","code":""},{"path":"https://chernolabs.github.io/scX/reference/launch_scX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Shiny app for visualization of single-cell data — launch_scX","text":"","code":"launch_scX(   cseo,   dataset_name = \"scX\",   point.size = 20,   launch.browser = T,   host = getOption(\"shiny.host\", \"127.0.0.1\"),   port = getOption(\"shiny.port\") )"},{"path":"https://chernolabs.github.io/scX/reference/launch_scX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Shiny app for visualization of single-cell data — launch_scX","text":"cseo List SingleCellExperiment object returned createSCEobject(). dataset_name Optional name app title. point.size Point size plots app. Defaults 20. launch.browser Launch Shiny app browser . Defaults TRUE.","code":""},{"path":"https://chernolabs.github.io/scX/reference/sce.html","id":null,"dir":"Reference","previous_headings":"","what":"SCE dataset from Marques et al. 2016 — sce","title":"SCE dataset from Marques et al. 2016 — sce","text":"subset data obtained scRNAseq package. dataset Marques et al. 2016 cells 12 regions central nervous system juvenile adult mice 10 distinct cell populations identified. package includes modified version dataset original cells subsampled pseudotime calculated demonstrate scX can represent numerical attributes. Pseudotime calculated slingshot.","code":""},{"path":"https://chernolabs.github.io/scX/reference/sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCE dataset from Marques et al. 2016 — sce","text":"","code":"sce"},{"path":[]},{"path":"https://chernolabs.github.io/scX/reference/sce.html","id":"sce","dir":"Reference","previous_headings":"","what":"sce","title":"SCE dataset from Marques et al. 2016 — sce","text":"Single Cell Experiment object 2141 cells 2000 highly variable genes  (HVG): assays counts colData title source_name age inferred_cell_type sex strain treatment pseudotime","code":""},{"path":"https://chernolabs.github.io/scX/reference/sce.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SCE dataset from Marques et al. 2016 — sce","text":"https://bioconductor.org/packages/release/data/experiment/manuals/scRNAseq/man/scRNAseq.pdf#Rfn.SingleCellExperiment.Rdash.class","code":""}]
